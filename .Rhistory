version()
version
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
detach("package:datasets", unload=TRUE)
library("datasets", lib.loc="C:/Program Files/R/R-3.0.3/library")
mytime <- matrix(nrow=2, ncol=6)
mytime[1,] <- c(2012, 06, 01, 12, 00, 00)
mytime[2,] <- c(2012, 06, 02, 12, 00, 00)
mytime
mytime[1,0]
mytime[1,1]
mytime[1,]
?
;
help()
View(mytime)
demo()
demo(graphics)
q()
q()
chooseCRANmirror()
setRepositories()
update.packages(ask='graphics',checkBuilt=TRUE)
utils:::menuInstallPkgs()
utils:::menuInstallLocal()
q()
update.packages(ask='graphics',checkBuilt=TRUE)
q()
search()
ls()
list.files()
getwd()
setwd("U:/Documents/Data Science/Coursera/R-Programming/code")
getwd()
ls()
list.files()
a <- 9
ls()
list.files()
quit()
setwd("~/Data Science/Coursera/R-Programming/code/Programming Assignment 2")
source('~/Data Science/Coursera/R-Programming/code/Programming Assignment 2/cachematrix.R')
source("cacheMatrix.R")
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
p$set()
p$setinv()
p$getinv()
q <- p$getinv()
q
q <- p$getinv()
q
q <- cacheSolve(p)
q <- cacheSolve(p)
q
q <- cacheSolve(m)
source('~/Data Science/Coursera/R-Programming/code/Programming Assignment 2/cachematrix.R')
source("cacheMatrix.R")
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
source('~/Data Science/Coursera/R-Programming/code/Programming Assignment 2/cachematrix.R')
source("cacheMatrix.R")
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
source('~/Data Science/Coursera/R-Programming/code/Programming Assignment 2/cachematrix.R')
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
r <- p$get()
r
r <- p$getinv()
r
p
p$get()
m1
print(p$same(z,m1))
print(p$same(z,m))
source('~/Data Science/Coursera/R-Programming/code/Programming Assignment 2/cachematrix.R')
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
source('~/Data Science/Coursera/R-Programming/code/Programming Assignment 2/cachematrix.R')
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
x <- z
m <- x$get()
m <- p$get()
if(!is.null(m)) {
("Getting cached data")
return(y)
} else if(all(m == z)) {
message("Getting cached data")
return(y)
}
print(is.null(m))
print(!is.null(m))
print(all(m == z)
)
print((!is.null(m) && all(m == z)))
source('~/Data Science/Coursera/R-Programming/code/Programming Assignment 2/cachematrix.R')
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p$get()
z
source('~/Data Science/Coursera/R-Programming/code/Programming Assignment 2/cachematrix.R')
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
source('~/Data Science/Coursera/R-Programming/code/Programming Assignment 2/cachematrix.R')
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
source('~/Data Science/Coursera/R-Programming/code/Programming Assignment 2/cachematrix.R')
source('~/Data Science/Coursera/R-Programming/code/Programming Assignment 2/cachematrix.R')
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
source('~/Data Science/Coursera/R-Programming/code/Programming Assignment 2/cachematrix.R')
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
source('~/Data Science/Coursera/R-Programming/code/Programming Assignment 2/cachematrix.R')
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
source('~/Data Science/Coursera/R-Programming/code/Programming Assignment 2/cachematrix.R')
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
source('~/Data Science/Coursera/R-Programming/code/Programming Assignment 2/cachematrix.R')
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
source("cacheMatrix.R")
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
source("cacheMatrix.R")
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
source("cacheMatrix.R")
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
source("cacheMatrix.R")
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
source('~/Data Science/Coursera/R-Programming/code/Programming Assignment 2/cachematrix.R')
source("cacheMatrix.R")
m <- matrix(c(1,3,5,7),2,2)
m1 <- matrix(c(2,4,6,8),2,2)
p <- makeCacheMatrix(m)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
q <- cacheSolve(p)
p <- makeCacheMatrix(m1)
q <- cacheSolve(p)
q <- cacheSolve(p)
